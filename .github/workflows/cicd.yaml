name: CI/CD Pipeline

on:
  push:
    branches: ["release"]
  pull_request:
    branches: ["release"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -Dspring.profiles.active=dev

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t techstore:${{ github.sha }} .

      - name: Push Docker image to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_IP: ${{ secrets.VPS_IP }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          scp -i private_key docker-compose.yml root@$VPS_IP:/home/app/
          scp -i private_key techstore.jar root@$VPS_IP:/home/app/
          ssh -i private_key root@$VPS_IP << 'EOF'
          cd /home/app
          docker load < techstore.jar
          docker-compose down 
          docker-compose up -d
          EOF
          rm private_key.pem